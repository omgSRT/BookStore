@page
@model BookStoreRazorPage.Pages.BookPages.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Book List</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
@if (TempData["ResultFailed"] != null)
{
    <div class="alert alert-danger">
        @TempData["ResultFailed"]
    </div>
    TempData.Clear();
}
@if (TempData["ResultSuccess"] != null)
{
    <div class="alert alert-success">
        @TempData["ResultSuccess"]
    </div>
    TempData.Clear();
}
<div>
    <form method="post">
        <input type="text" asp-for="SearchValue" class="" style="height: 38px;" />
        <input type="submit" value="Search" class="btn btn-secondary mb-1" />
    </form>
</div>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Isbn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].ReleaseYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Version)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].CategoryId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].PublisherId)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Book) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Isbn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Version)
            </td>
            <td>
               @Html.DisplayFor(modelItem => item.IsActive)
              </td>
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
                <td>
                    <a asp-page="./Edit" asp-route-id="@item.Id">Edit</a> |
                    <a asp-page="./Details" asp-route-id="@item.Id">Details</a> |
                    @if (item.IsActive == true)
                    {
                        <a asp-page="./Delete" asp-route-id="@item.Id">Delete</a>
                    }
                </td>
        </tr>
       }
    </tbody>
</table>

<div class="align-middle">
    <ul class="pagination">
        @for (int b = 1; b <= Model.totalPages; b++)
        {
            <li class="page-item @(b == Model.curentPage ? "active" : "")">
                <a asp-page="./Index" asp-route-curentPage="@b" class="page-link">@b</a>
            </li>
        }
    </ul>
</div>
