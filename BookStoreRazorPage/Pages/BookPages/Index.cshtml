@page
@model BookStoreRazorPage.Pages.BookPages.IndexModel

@{
    ViewData["Title"] = "Index";
}

<h1>Index</h1>

<p>
    <a asp-page="Create">Create New</a>
</p>
<form id="searchForm" method="post">
    <input type="text" id="searchInput" name="search" placeholder="Search by name" style="height: 38px;" />
    <button type="submit" class="btn btn-secondary mb-1">Search</button>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Isbn)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Author)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].ReleaseYear)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Version)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].IsActive)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Amount)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Avatar)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Price)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Description)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Category)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Book[0].Publisher)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>
@foreach (var item in Model.Book) {
    <form id="editIsActiveForm-@item.Id" asp-page-handler="EditAccount" asp-route-id="@item.Id" method="post">
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Isbn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.ReleaseYear)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Version)
            </td>
                    <select asp-for="@item.IsActive" asp-items="@Model.IsActiveOptions" name="IsActive" id="isActiveSelect-@item.Id" onchange="changedButton(@item.Id)">
                    </select>
              
            <td>
                @Html.DisplayFor(modelItem => item.Amount)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Avatar)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Price)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Description)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Id)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Publisher.Name)
            </td>

        </tr>
       </form>
       }
        @if (HttpContext.Session.GetString("UpdateSuccessMessage") != null)
        {
            <div class="alert alert-success" id="successMessage">
                <p>@HttpContext.Session.GetString("UpdateSuccessMessage")</p>
            </div>
        }
        @{
            // This block is C# code, not Razor HTML markup
            if (HttpContext.Session.GetString("UpdateSuccessMessage") != null)
            {
                HttpContext.Session.Remove("UpdateSuccessMessage");
            }
        }
}
    </tbody>
</table>

<div class="align-middle">
    <ul class="pagination">
        @for (int b = 1; b <= Model.totalPages; b++)
        {
            <li class="page-item @(b == Model.curentPage ? "active" : "")">
                <a asp-page="./Index" asp-route-curentPage="@b" class="page-link">@b</a>
            </li>
        }
    </ul>
</div>

<script>
    function showStoresSelectList(select, id) {
        changedButton(id)
        var selectedValue = select.value;
        var storeDropdown = document.getElementById('storeDropdown-' + id);

        if (selectedValue === '1') {
            storeDropdown.style.display = 'block';
        } else {
            storeDropdown.style.display = 'none';
        }
    }

    function changedButton(id) {
        var submitButton = document.getElementById("submitButton-" + id);
        if (submitButton) {
            submitButton.style.display = "block"; // Show the submit button when any select element changes
        }
    }

    setTimeout(function () {
        var successMessage = document.getElementById('successMessage');
        if (successMessage) {
            successMessage.style.display = 'none'; // Hide the message
        }
    }, 3000); // 5 s

</script>
